%!
%#  `GNU AGPL Noordzij_cub.ps v0.1´ és un algorisme que genera dinàmicament l'icònic cub de Gerrit Noordzij,
%#  en format PDF, amb variables diverses (glif, instàncies, cos, etc), lleixes (Layers) i detalls per glif (Articles).
%#  Per a intèrprets `GNU AGPL Ghostscript´ però també, amb ben pocs retocs, pot córrer
%#  amb l'Adobe Acrobat Distiller (fins hi tot amb MacOSX PSNormalizer Framework/Apple pstopdf).
%# 
%#  `Copyleft 2023 :: l'Ametlla de Merola :: Marcantoni Malagarriga-Picas´
%#  `<http://www.femfum.com> | <marcantoni@femfum.com>´
%#  `https://github.com/marcantonifemfum/CubNoordzij´
%#
%#  Detall de la llicència `https://github.com/marcantonifemfum/CubNoordzij/blob/main/LICENSE´

%% El cub original de Gerrit Noordzij, fa:
%% un cub isomètric, fugant a mestral (NO), construït amb 5 plans quadrats de 5x5 glifs per pla,
%% tal i com observem en el cub original a la portada del llibre:
%% «De streek Theorie van het schrift» https://www.typemag.org/images/uploads/Noordzij_Streek_original_cover.jpg
%% Noordzij fa treballar les instàncies de la tipografia en 3 eixos dinàmics:
%% a l'eix de les X evoluciona el pes, d'esquerra a dreta, de fina a negreta
%% a l'eix de les y evoluciona la serifa, de dalt a baix, de punxa a escapçat
%% a l'eix de les Z evoluciona el contrast, de davant a darrera (fugant cap el NO) de menys contrast a més contrast

%% Origin_of_Patterning_LU_OPT.pdf (pàg.233)
%% «The ranges of sort of contrast and reduction of contrast can be set out on dimensions of a cube [...]
%% My description of the cube is a mixture of technology, design, cultural history, and psychology with a
%% flavor of cultural anthropology; a square kind of fortune-telling»
%% Gerrit Noordzij «The Shape of the Stroke» Raster Imaging and Digital Typography
%% (New York: Cambridge University Press, 1991), pp. 34-42 (p.38)
%% https://www.typemag.org/post/it-all-starts-with-writing-gerrit-noordzij

%% Nosaltres fem:
%% un cub isomètric, fugant a mestral (NO), construït amb n plans quadrats de nxn glifs per pla,
%% generem un espai de coordenades en fals 3D i perspectiva isomètrica (X120 Y120 Z120)
%% per defecte, treballem amb la tipografia Adobe Sans MM
%% escollim un (1) glif, escrit directe via teclat, pel seu nom literal o pel seu codi decimal (via URL també en hexa)
%% per defecte, en el pla XY, els glifs s'ordenen de baix a dalt i d'esquerra a dreta
%% per defecte, en el pla XY, el pes dels glifs (Weight) s'ordena de dalt a baix i d'esquerra a dreta
%% per defecte, en el pla Z, les lleixes (Layers de nxn glifs) s'ordenen d'esquerra a dreta
%% per defecte, en el pla Z, l'ample dels glifs (Width) s'ordena d'esquerra a dreta
%% per defecte, en el pla XY, treballem amb 1 eix dinàmic: el pes (Weight)
%% per defecte, en el pla Z, treballem amb 1 eix dinàmic: l'ample (Width)
%% per defecte, cadascun dels plans 3D verticals són una lleixa (solapa Layers)
%% valors a escollir entre 2 i 12 (dimensió del cub nxnxn)
%% per defecte, el detall de les instàncies de cadascun dels glifs (pes i ample) s'etiqueten a la solapa Articles
%% valors fixos entre 50 i 1450 per a les instàncies de cadascun dels eixos de pes i ample, Weight i Width
%% el càlcul del format de pàgina va en funció del cos escollit
%% valors del cos a escollir entre 2 i 200 punts
%% dins el cub, al vèrtex NO hi ha el glif amb el valor màxim de pes i ample
%% dins el cub, al vèrtex SE hi ha el glif amb el valor mínim de pes i ample
%% dins el cub, al vèrtex SO hi ha el primer glif que es compon
%% dins el cub, al vèrtex NE hi ha el darrer glif que es compon
%% per defecte, a la solapa Articles s'etiqueta els glifs visibles (amb el cub muntat) amb un asterisc * al final
%% per defecte, a la solapa Layers s'etiqueta el desplegable amb el nom literal del glif

%% si traslladem el codi a JS/canvas, CSS, html podrem clonar el Cub de Noordzij localitzant una tipografia que
%% tingui 3 eixos dinàmics de pes, serifa i contrast

%% Dins les MM, tenim d'altres alternatives:
%% AdobeSerif MM, X,Y: pes, Z: ample
%% AdobeMinion MM, X: pes , Y: ample , Z: correcció òptica (no operativa amb GS 10?)
%% MoveMe MM de Lucas de Groot (no operativa amb GS 10?)

%% aquest algorisme podria beure de valors aleatoris cada cop que s'executi
%% aquest algorisme és ideal per fer-ne un paral·lel mirall entre l'ús de les MM i les vOTF via js/canvas/CSS/SVG

%% al Terminal la línia de comanda ha de dur el flag -dPDFSETTINGS=/prepress perquè no ens substitueixi la font!
%% gs -q -dNOSAFER -o re.pdf -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -f Noordzij_cub.ps

%%Assaig del comptador per veure com creix la distribució dins el cub
false
/Acmptdr exch def
%%CUBescriu marcarem els punts on fem ús de l'espai del cub com una manera d'escriure paraules
%% /Acmptdr també ha de ser a true!
false
/CUBescriu exch def
(Lletraferits)  %% paraula que escriurem al cub i el seu nombre de caràcters fixarà el valor del costat
/txtcub exch def

%% definim el glif de substitució quan no el localitzem per nom o per codi
/.notdef (#) def

systemdict /EncodingDirectory get /WinAnsiEncoding get dup length array copy
/xifrat exch def  %% el desem com una array modificable si ens cal personalitzar glifs fora del WinAnsi

CUBescriu Acmptdr and
{
 txtcub length
}
{  %% escollim el nombre de glifs (instàncies) ídem pels 3 costats xyz del cub
%%MenuGET &xyz= capturem la variable via URL?
 %% capturem la variable d'entorn generada amb PHP com a PHP2PS2PHPgeneracioicapturadunavariabledentorn.php
 (MRCT_xyz) getenv  %% la variable d'entorn existeix?
 {
  dup length 0 eq
  {  %% arriba buida perquè executem via URL amb cubNoordzij.php sense paràmetres (mètode $_GET)
   pop 5  %% valor per defecte original del cub de Noordzij
  }
  {  %% té dades perquè executem via URL amb index_##.php (mètode $_POST) o amb cubNoordzij.php amb paràmetres (mètode $_GET)
   cvx exec cvi  %% un numèric dins una string que ens cal forçar a enter per precaució
  }ifelse
 }
 {  %% la variable d'entorn NO existeix perquè executem l'applet en local via Terminal per línia de comanda
  5  %% valors enters, de 2 fins a # (quan ncub és > 100 posa a prova les CPU en el càlcul tot i generar un arxiu de pocs Kb)
  %% (\n Ghostscript no pot capturar aquesta variable d'entorn!\n\n)print flush
 }ifelse
}ifelse
%% filtrem que no hi hagi un valor per sota de 2 i més enllà de 12 glifs pel costat del cub (instàncies Z)
dup 12 gt
{
 pop 12  %% ho deixem amb dotze?
}
{
 dup 2 lt
 {  %% com a mínim 2 glifs de costat
  pop 2
 }if
}ifelse
dup /nDocInfo exch def
/ncub exch def

%% escollim un glif pel seu literal, pel seu decimal o una cadena de text?
Acmptdr  %% fem l'assaig del comptador per veure com creix la distribució dins el cub?
{
 ncub dup mul ncub mul
%%CUBescriu marcarem els punts on fem ús de l'espai del cub com una manera d'escriure paraules
 CUBescriu  %% permet escriure una paraula amb el mateix nombre de caràcters que de lleixes per tal es pugui llegir dins el cub
 {
  %% farcim la cadena on quedaran indexats els glifs que formen la paraula /txtcub per compondre i llegir el cub 3D
  string /txt3Dcub exch def
  /i3Dcub 0 def  %% índex dels glifs a ficar dins /txt3Dcub
  /itxtcub 0 def  %% índex dels glifs a compondre dins /txtcub
  %% escrivint de /txtcub en fuga a Z:
  %% no caldria aquesta nina russa de repeats, doncs amb un for fent salts de length de /txtcub dins /txt3Dcub n'hi hauria prou
%%Ordena de com s'escriu la paraula que hem definit a /txtcub (EP! ara només treballa a 1 octet)
  false
  {
   %% compon el text de manera que, a cada lleixa, componem /txtcub en columna de baix a dalt
   ncub
   {  %% Z
    ncub
    {  %% X
     ncub
     {  %% Y
      i3Dcub dup
      %% primer extraiem el decimal de /txtcub amb l'índex itxtcub
      txtcub itxtcub get
      %% incrustem el decimal a l'índex /i3Dcub dins /txt3Dcub
      txt3Dcub 3 1 roll put
      1 add /i3Dcub exch def
      itxtcub 1 add dup ncub eq
      {  %% inicialitzem l'índex que extrau el glif a compondre
       pop /itxtcub 0 def
      }
      {
       /itxtcub exch def
      }ifelse
     }repeat
    }repeat
   }repeat
  }
  {  %% compon el text de manera que, a cada lleixa, omplim d'1 sola lletra del mot de /txtcub perquè és llegeixi en fuga Z
   /saltLleixa 0 def
   0 1 ncub 1 sub
   {  %% per cada lleixa
    txtcub exch get /araGlif exch def  %% el decimal del glif a repetir per tota la lleixa
    0 1 ncub dup mul 1 sub
    {  %% per tota la lleixa
     saltLleixa add txt3Dcub exch araGlif put
    }for
    saltLleixa ncub dup mul add /saltLleixa exch def
   }for
  }ifelse
%%CUBescriu manualment hi posem el glif que ens sembla que té una mètrica més ample (com ho automatitzarem?)
  (L)
 }
 {
  64 string cvs
 }ifelse
}
{  %% glif o conjunt a compondre dins el cub 
%%MenuGET &glif= capturem la variable via URL?
 %% capturem la variable d'entorn generada amb PHP com a PHP2PS2PHPgeneracioicapturadunavariabledentorn.php
 (MRCT_glif) getenv  %% la variable d'entorn existeix?
 {
  dup length 0 eq
  {  %% arriba buida perquè executem via URL amb cubNoordzij.php sense paràmetres (mètode $_GET)
   pop (e)  %% valor per defecte original del cub de Noordzij
  }
  {  %% té dades perquè executem via URL amb index_##.php (mètode $_POST) o amb cubNoordzij.php amb paràmetres (mètode $_GET)
   {  %% què passa quan és el nom reservat d'un operador, p.e. showpage ?
    dup cvx exec  %% executem l'string per saber si és una cadena de text (pot ser també un nom o un decimal)
   }stopped
   {  %% és una cadena de text
    %% ha d'haver estat escrita en notació hex per a URL, p.e... %E9 ...en comptes de... é

%    %% si no és així aterraria dins l'string en doble octet i hauríem de detectar-ho
%    dup length string dup /a1octet exch def /NullEncode filter /FA1octet exch def
%    {
%     dup 195 eq
%     {
%      pop
%     }
%     {
%      FA1octet exch write
%     }ifelse
%    }forall
%    FA1octet closefile
%    a1octet
%    dup (\000) search  %% purguem els caràcters zero (\000) sobrants del buffer
%    {
%     exch pop exch pop
%    }if
%    exch pop

%%Decodificador de xifratPlegaVeu.ps
[  %% l'ordre de substitució és molt rellevant!
 %% signes incials a cercar per sota del 32 decimal
 (\000)  %% 0 null
 (\b)    %% 1 \010 backspace
 (\t)    %% 2 \011 horizontal tab
 (\f)    %% 3 \014 form feed (FF)
 (\r\n)  %% 4 retorn de carro dur (CR+LF)
 (\r)    %% 5 \015 carriage return (CR)
 (  )    %% 6 típic error del doble espai en blanc
 %% del 32 a 126 decimal, el GS no treballa amb octals
 %% !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 %% signes tipogràfics a cercar més enllà de l'ascii (127 decimal), seguint la taula WinAnsiEncoding
 %% cadena de codis octal que rep l'string provinent d'una textarea (HTML/PHP via POST)
 (\342\200\242)  %% 7   127 /bullet
 (\342\202\254)  %% 8   128 /Euro
                 %%     129             /bullet
 (\342\200\232)  %% 9   130 /quotesinglbase
 (\306\222)      %% 10  131 /florin
                 %%     134             /quotedblbase
 (\342\200\246)  %% 11  133 /ellipsis
                 %%     134             /dagger
                 %%     135             /daggerdbl
                 %%     136             /circumflex
                 %%     137             /perthousand
                 %%     138             /Scaron
                 %%     139             /guilsinglleft
                 %%     140             /OE
                 %%     141             /bullet
                 %%     142             /Zcaron
                 %%     143             /bullet
                 %%     144             /bullet
 (\342\200\230)  %% 12  145 /quoteleft
 (\342\200\231)  %% 13  146 /quoteright
 (\342\200\234)  %% 14  147 /quotedblleft
 (\342\200\235)  %% 15  148 /quotedblright
                 %%     149             /bullet
 (\342\200\223)  %% 16  150 /endash
 (\342\200\224)  %% 17  151 /emdash
                 %%     152             /tilde
                 %%     153             /trademark
                 %%     154                /scaron
                 %%     155                /guilsinglright
                 %%     156                /oe
                 %%     157                /bullet
                 %%     158                /zcaron
                 %%     159                /Ydieresis
                 %%     160                /space
                 %%     161                /exclamdown
                 %%     162                /cent
                 %%     163                /sterling
                 %%     164                /currency
                 %%     165                /yen
                 %%     166                /brokenbar
                 %%     167                /section
                 %%     168                /dieresis
 (\302\251)      %% 18  169 /copyright
 (\302\252)      %% 19  170 /ordfeminine
 (\302\253)      %% 20  171 /guillemotleft
                 %%     172                /logicalnot
                 %%     173                /hyphen
 (\302\256)      %% 21  174 /registered
                 %%     175                /macron
 (\302\260)      %% 22  176 /degree
 (\302\261)      %% 23  177 /plusminus
 (\302\262)      %% 24  178 /twosuperior
                 %%     179                /threesuperior
                 %%     180                /acute
                 %%     181                /mu
                 %%     182                /paragraph
 (\302\267)      %% 25  183 /periodcentered
                 %%     184                /cedilla
                 %%     185                /onesuperior
                 %%     186                /ordmasculine
 (\302\273)      %% 26  187 /guillemotright
                 %%     188                /onequarter
 (\302\275)      %% 27  189 /onehalf
                 %%     190                /threequarters
                 %%     191                /questiondown
 (\303\200)      %% 28  192 /Agrave
                 %%     193                /Aacute
                 %%     194                /Acircumflex
                 %%     195                /Atilde
                 %%     196                /Adieresis
                 %%     197                /Aring
                 %%     198                /AE
 (\303\207)      %% 29  199 /Ccedilla
 (\303\210)      %% 30  200 /Egrave
 (\303\211)      %% 31  201 /Eacute
                 %%     202                /Ecircumflex
                 %%     203                /Edieresis
                 %%     204                /Igrave
 (\303\215)      %% 32  205 /Iacute
                 %%     206                /Icircumflex
 (\303\217)      %% 33  207 /Idieresis
                 %%     208                /Eth
                 %%     209                /Ntilde
 (\303\222)      %% 34  210 /Ograve
 (\303\223)      %% 35  211 /Oacute
                 %%     212                /Ocircumflex
                 %%     213                /Otilde
                 %%     214                /Odieresis
                 %%     215                /multiply
                 %%     216                /Oslash
                 %%     217                /Ugrave
 (\303\232)      %% 36  218 /Uacute
                 %%     219                /Ucircumflex
 (\303\234)      %% 37  220 /Udieresis
                 %%     221                /Yacute
                 %%     222                /Thorn
                 %%     223                /germandbls
 (\303\240)      %% 38  224 /agrave
                 %%     225                /aacute
                 %%     226                /acircumflex
                 %%     227                /atilde
                 %%     228                /adieresis
                 %%     229                /aring
                 %%     230                /ae
 (\303\247)      %% 39  231 /ccedilla
 (\303\250)      %% 40  232 /egrave
 (\303\251)      %% 41  233 /eacute
                 %%     234                /ecircumflex
                 %%     235                /edieresis
                 %%     236                /igrave
 (\303\255)      %% 42  237 /iacute
                 %%     238                /icircumflex
 (\303\257)      %% 43  239 /idieresis
                 %%     240                /eth
                 %%     241                /ntilde
 (\303\262)      %% 44  242 /ograve
 (\303\263)      %% 45  243 /oacute
                 %%     244                /ocircumflex
                 %%     245                /otilde
                 %%     246                /odieresis
                 %%     247                /divide
                 %%     248                /oslash
                 %%     249                /ugrave
 (\303\272)      %% 46  250 /uacute
                 %%     251                /ucircumflex
 (\303\274)      %% 47  252 /udieresis
                 %%     253                /yacute
                 %%     254                /thorn
                 %%     255                /ydieresis

 %% signes finals a cercar
 (\n)            %% 48                     \012 line feed (LF)
] /treu exch def

[  %% l'ordre de substitució és molt rellevant!
 %% signes inicials a substituir
 ()   %% 0 null per buit, o sigui que fa desaparèixer la cadena corresponent a /treu
 ( )  %% 1 backspace per espai en blanc
 ( )  %% 2 tabulador horitzontal per espai en blanc
 ( )  %% 3 form feed per espai en blanc
 (\n) %% 4 retorn de carro dur per LF
 (\n) %% 5 CR per LF
 ( )  %% 6 2 espais en blanc per 1 espai en blanc
 %% (\\) ja ens ha de venir escapats de la <textarea>
 %% (\() ja ens ha de venir escapats de la <textarea>
 %% (\)) ja ens ha de venir escapats de la <textarea>

 %% signes tipogràfics a substituir de la taula WinAnsiEncoding
         %%     decimal unicode nom PS del glif
 (\177)  %% 7   127     <2022>  /bullet
 (\200)  %% 8   128     <20AC>  /Euro
         %%     129             /bullet
 (\202)  %% 9   130     <201A>  /quotesinglbase 
 (\203)  %% 10  131     <0192>  /florin
         %%     132             /quotedblbase
 (\205)  %% 11  133     <2026>  /ellipsis
         %%     134             /dagger
         %%     135             /daggerdbl
         %%     136             /circumflex
         %%     137             /perthousand
         %%     138             /Scaron
         %%     139             /guilsinglleft
         %%     140             /OE
         %%     141             /bullet
         %%     142             /Zcaron
         %%     143             /bullet
         %%     144             /bullet
 (\221)  %% 12  145     <2018>  /quoteleft
 (\222)  %% 13  146     <2019>  /quoteright
 (\223)  %% 14  147     <201C>  /quotedblleft
 (\224)  %% 15  148     <201D>  /quotedblright
         %%     149             /bullet
 (\226)  %% 16  150     <2013>  /endash
 (\227)  %% 17  151     <2014>  /emdash
         %%     152             /tilde
         %%     153             /trademark
         %%     154             /scaron
         %%     155             /guilsinglright
         %%     156             /oe
         %%     157             /bullet
         %%     158             /zcaron
         %%     159             /Ydieresis
         %%     160             /space
         %%     161             /exclamdown
         %%     162             /cent
         %%     163             /sterling
         %%     164             /currency
         %%     165             /yen
         %%     166             /brokenbar
         %%     167             /section
         %%     168             /dieresis
 (\251)  %% 18  169     <00A9>  /copyright
 (\252)  %% 19  170     <00AA>  /ordfeminine
 (\253)  %% 20  171     <00AB>  /guillemotleft
         %%     172             /logicalnot
         %%     173             /hyphen
 (\256)  %% 21  174     <00AE>  /registered
         %%     175             /macron
 (\260)  %% 22  176     <00B0>  /degree
 (\261)  %% 23  177     <00B1>  /plusminus
 (\262)  %% 24  178     <00B2>  /twosuperior
         %%     179             /threesuperior
         %%     180             /acute
         %%     181             /mu
         %%     182             /paragraph
 (\267)  %% 25  183     <00B7>  /periodcentered
         %%     184             /cedilla
         %%     185             /onesuperior
         %%     186             /ordmasculine
 (\273)  %% 26  187     <00BB>  /guillemotright
         %%     188             /onequarter
 (\275)  %% 27  189     <00BD>  /onehalf
         %%     190             /threequarters
         %%     191             /questiondown
 (\300)  %% 28  192     <00C0>  /Agrave
         %%     193             /Aacute
         %%     194             /Acircumflex
         %%     195             /Atilde
         %%     196             /Adieresis
         %%     197             /Aring
         %%     198             /AE
 (\307)  %% 29  199     <00C7>  /Ccedilla
 (\310)  %% 30  200     <00C8>  /Egrave
 (\311)  %% 31  201     <00C9>  /Eacute
         %%     202             /Ecircumflex
         %%     203             /Edieresis
         %%     204             /Igrave
 (\315)  %% 32  205     <00CD>  /Iacute
         %%     206             /Icircumflex
 (\317)  %% 33  207     <00CF>  /Idieresis
         %%     208             /Eth
         %%     209             /Ntilde
 (\322)  %% 34  210     <00D2>  /Ograve
 (\323)  %% 35  211     <00D3>  /Oacute
         %%     212             /Ocircumflex
         %%     213             /Otilde
         %%     214             /Odieresis
         %%     215             /multiply
         %%     216             /Oslash
         %%     217             /Ugrave
 (\332)  %% 36  218     <00DA>  /Uacute
         %%     219             /Ucircumflex
 (\334)  %% 37  220     <00DC>  /Udieresis
         %%     221             /Yacute
         %%     222             /Thorn
         %%     223             /germandbls
 (\340)  %% 38  224     <00E0>  /agrave
         %%     225             /aacute
         %%     226             /acircumflex
         %%     227             /atilde
         %%     228             /adieresis
         %%     229             /aring
         %%     230             /ae
 (\347)  %% 39  231     <00E7>  /ccedilla
 (\350)  %% 40  232     <00E8>  /egrave
 (\351)  %% 41  233     <00E9>  /eacute
         %%     234             /ecircumflex
         %%     235             /edieresis
         %%     236             /igrave
 (\355)  %% 42  237     <00ED>  /iacute
         %%     238             /icircumflex
 (\357)  %% 43  239     <00EF>  /idieresis
         %%     240             /eth
         %%     241             /ntilde
 (\362)  %% 44  242     <00F2>  /ograve
 (\363)  %% 45  243     <00F3>  /oacute
         %%     244             /ocircumflex
         %%     245             /otilde
         %%     246             /odieresis
         %%     247             /divide
         %%     248             /oslash
         %%     249             /ugrave
 (\372)  %% 46  250     <00FA>  /uacute
         %%     251             /ucircumflex
 (\374)  %% 47  252     <00FC>  /udieresis
         %%     253             /yacute
         %%     254             /thorn
         %%     255             /ydieresis

 %% signes finals a substituir
 ( \n)   %% 48  tots els (\n) passen a ser ( \n) amb l'estratègia de plegaVeu_OC.ps
] /fica exch def

treu length fica length ne
{
 ( <<<< el nombre d'elements a trobar i substituir treu/fica difereixen ...pleguem!)== quit
}if

/TREUiFICA treu length def  %% el nombre d'elements de /treu i /fica que han de coincidir (pestell de sortida del loop)
/itreu 0 def  %% index de /treu

%% exemple on podem veure com es reescriuen correctament cadenes de 2 i 3 octals, dobles espais, retorns de carro, diacrítics:
%(davant\000\rdarrera\342\200\242enlla\342\202\254enç\303\240 i  pul·lulant l'alè\r\n\n\n\r\n\nsense esma ni quaresma no\fs'escau\tfruïr!)

%(Peixos dins el rostoll\nàligues dins el foc\nla mar dins els ulls\nels peus plens de cans\nel vent és pudent\ntots els déus van gats\n\nOh serra mamerra\nens roben la terra\ni ens fonen l'aram.)

%(Si vinguessis per tardor\nespolsaríem l'estiu\namb llengots i mitja rialla,\ncom mestresses al badiu.\n\nSi ens veiéssim en un any\ncabdellaríem mesades,\ntotes al seu calaixer,\nmentre el temps passa debades.\n\nSi triguessis sols un segles,\ncomptats només amb la mà,\ndeixondint els dits tot d'una\ndins el Van Diemens llunyà.\n\nSi del cert la vida fuig,\nbé prou que ambdós ho sabem,\nbo i foragitant l'embolcall\nfaríem un tast a l'etern.\n\nAra però, ignorem al capdavall\nsi el temps és l'ala incerta\nd'un borinot que, cap a mi furiós,\nenvà el seu fibló no encerta.)

%% tenim aquí l'string provinent de la variable d'entorn

mark exch
{  %% loop general
 
 {  %% loop per ficar i treure caràcters de manera que a l'stack hi deixem cadascun dels trams (strings) on s'ha fet un canvi
  treu itreu get search
  {
   exch pop  %% eliminem la cadena que cerquem (treu)
   dup length dup /araVa exch def fica itreu get dup length dup /ficaFa exch def
   3 -1 roll add string  %% cadena on ficarem el tram anterior i la substitució que segueix
   dup 3 -1 roll araVa exch putinterval  %% fiquem la cadena /fica que substitueix la cadena /treu
   dup 3 -1 roll 0 exch putinterval  %% fiquem el tram anterior
%   araVa ficaFa add /araVa exch def  %% on anirà el tram posterior a /fica
  }
  {
   exit
  }ifelse
  exch
 }loop

 %% mentre n'hi hagi mes d'un
 counttomark 1 gt
 {

  %% aquesta segmentació ens permet, per exemple, tenir una versió del text trencat pels retorns de carro  
  %% array l'endreçat ideal del text: una sola pàgina i tantes línies com retorns de carro
  itreu 48 eq  %% índex (hauria de ser el darrer de treu/fica!) de (\n) per convertir-se en ()? o ( \n)?
  {
   counttomark dup /tripaCdL exch def
   copy tripaCdL array astore /strctrIdeal exch def
  }if

  counttomark /atura't exch def
  /ici 2 def
  {  %% loop que capgira tots els elements trobats a l'stack fins a mark
   ici -1 roll ici 1 add /ici exch def ici atura't gt
   {
    exit
   }if
  }loop

  {  %% loop empalmador de les cadenes trobades en 1 sola
   dup length dup 3 index length add string dup 4 -1 roll
   0 exch putinterval dup 3 -1 roll 4 -1 roll putinterval
   counttomark 1 eq
   {
    exit
   }if
  }loop
%(<<<)pstack quit

 }if

 itreu 1 add /itreu exch def
 TREUiFICA itreu eq
 {
  exit
 }if
}loop  %% general

exch pop  %% ens carreguem mark

%% la cadena que ens queda a l'stack és el text corregut: han desaparegut els caràcters de canvi de linia/paràgraf \n

%(una cadena de text)pstack exit
   }
   {  %% és un codi decimal o un literal?
    exch pop
%(un codi decimal o un literal)pstack exit
   }ifelse
  }ifelse
 }
 {  %% la variable d'entorn NO existeix perquè executem l'applet en local via Terminal per línia de comanda
  %% aquí ens cal escriure d'una d'aquestes tres maneres:
/periodcentered   %% /e literal  %% 101 decimal  %% (ei) cadena de text, però ara hi tenim un escapçador al primer glif!
  %% (\n Ghostscript no pot capturar aquesta variable d'entorn!\n\n)print flush
 }ifelse

}ifelse
dup /gDocInfo exch def
/glif exch def

/ESaCharStrings? false def  %% gatell per saber si hem de cercar el literal dins els glifs definits a la font de treball

%% el tractem com el tractem, sempre l'acabem convertint en una string
glif type /integertype eq
{  %% enter decimal que li cerquem el literal equivalent
 glif 32 le
 {  %% si és un espai en blanc o per sota del seu codi
  /glif /.notdef def  %% activarem el caràcter desconegut que hem definit abans
 }
 {
  glif 256 ge
  {  %% un codi en doble octet més enllà del 255
   systemdict /AdobeGlyphList get
   {  %% forall
    glif eq
    {
     /glif exch def  %% passem d'un enter decimal a un literal
     /ESaCharStrings? true def  %% cercarem dins /cionari
     exit
    }
    {
     pop
    }ifelse
   }forall
   glif type /integertype eq
   {  %% però si encara no hem trobat a quin literal equival
    /glif /.notdef def  %% activarem el caràcter desconegut que hem definit abans
   }if
  }
  {
   1 string dup 0 glif put /glif exch def
  }ifelse
 }ifelse
}
{
 glif type /nametype eq
 {
%  systemdict /EncodingDirectory get /WinAnsiEncoding get /xifrat exch def
  xifrat length 1 sub 0 exch 1 exch
  {
   dup xifrat exch get glif eq
   {
    1 string dup 0 4 -1 roll put /glif exch def exit
   }
   {
    pop
   }ifelse
  }for
  glif type /nametype eq
  {
   /ESaCharStrings? true def
%% ho deixem per més endavant
%%   (\n\n >>> no hem trobat el glif, pleguem!\n\n)print flush quit
  }if
 }
 {  %% stringtype
  Acmptdr not
  {  %% tret que fem anar el comptador de glifs o el componedor /CUBescriu
   glif length 1 gt
   {  %% escapcem al primer glif si en duu més d'un
    glif 0 1 getinterval /glif exch def
   }if
  }if
 }ifelse
}ifelse

%%MenuGET &cos= capturem la variable via URL?
 %% capturem la variable d'entorn generada amb PHP com a PHP2PS2PHPgeneracioicapturadunavariabledentorn.php
 (MRCT_cos) getenv  %% la variable d'entorn existeix?
 {
  dup length 0 eq
  {  %% arriba buida perquè executem via URL amb cubNoordzij.php sense paràmetres (mètode $_GET)
   pop 24  %% valor per defecte original del cub de Noordzij
  }  
  {  %% té dades perquè executem via URL amb index_##.php (mètode $_POST) o amb cubNoordzij.php amb paràmetres (mètode $_GET)
   cvx exec  %% un numèric dins una string que, si convé, ens permet treballar amb decimals
  }ifelse
 }  
 {  %% la variable d'entorn NO existeix perquè executem l'applet en local via Terminal per línia de comanda
  200  %% valors enters, de 1 fins a # (quan ncub és > 100 posa a prova les CPU en el càlcul tot i generar un arxiu de pocs Kb)
  %% (\n Ghostscript no pot capturar aquesta variable d'entorn!\n\n)print flush
 }ifelse
%% escollim un cos
dup 200 gt
{  %% filtrem a un màxim de cos
 pop 200
}
{  %% i ha un mínim
 dup 2 lt
 {
  pop 2
 }if
}ifelse
dup /cDocInfo exch def
/cosglif exch def

%% ara no actua
%% escollim el format de pàgina
595 842  %% ample, alt
2 array astore /fPagina exch def

%% el format de pàgina en funció del cos (true) o el cos en funció del format de pàgina (false)
true
/paginaVScos exch def  %% aquesta variable encara no actua (fa com si sempre fos a true)


%% activem les lleixes? %%OC Optional Content
true  %% a banda també activa/desactiva la solapa d'articles glif a glif
/FEMlleixes exch def


%% mapa d'índex de visibilitat dels glifs quan el cub és muntat (totes les lleixes actives) i que indiquen a
%%GlifVisible quan hi ha de posar el signe ! que veiem a la solapa d'Articles i que indica que el glif és visible
ncub dup dup mul mul array /aVisibles exch def
0 1 aVisibles length 1 sub
{  %% posem a false (no visibles) tots els elements
 aVisibles exch false put
}for

0 1 ncub 1 sub
{  %% for
 dup ncub 1 sub eq
 {  %% posa a true (visibles) tots els equidistants a la distància X ncub i a la Z ncub x ncub
  dup
  ncub
  {
   dup aVisibles exch true put
   ncub dup mul add
  }repeat
  pop
  ncub add ncub dup dup mul 1 sub   
  {
   ncub
   {
    dup aVisibles exch true put
    ncub dup mul add
   }repeat
   pop    
  }for
 }
 {  %% posa a true (visibles) tots els equidistants a la distància Z ncub x ncub
  ncub
  {
   dup aVisibles exch true put
   ncub dup mul add
  }repeat
  pop
 }ifelse
}for
%% posa a true tota la lleixa vertical de davant de tot (malgrat alguns dels seus índex ja estiguin a true pel càlcul anterior)
aVisibles length 1 sub dup ncub dup mul sub -1 exch
{
 aVisibles exch true put
}for

%aVisibles(OOO-OOO)pstack quit

%% escollim la tipografia MM de treball
(/Users/femfum/MultipleMaster/AdobeSans_AdobeSerif/ZX______.PFB)  %% Terminal
%(/Library/WebServer/Documents/www.pliegos.net/maker/GerritNoordzij/ZX______.PFB)  %% localhost MacBookAir
%% (/var/www/wordpress/maker/GerritNoordzij/ZX______.PFB)  %% servidor Teixidora
/tipusMM exch def

%% explorem tots els glifs de la font de treball
%% crida a CharStrings, si existeix
tipusMM findfont dup /CharStrings known
{
 /CharStrings get dup length /nGlifs exch def
 /cionari exch def
 %% cap glif del /WinAnsiEncoding no és a la font?
 %systemdict /EncodingDirectory get /WinAnsiEncoding get
 xifrat
 {
  dup cionari exch known
  {
   pop
  }
  {  %% quan algun glif de la /WinAnsiEncoding no és a joc de la tipografia de treball
   ==
   (\n\n >>> alguns glifs estandards no es troben en aquesta Font ...pleguem!\n\n)print flush exit
  }ifelse
 }forall
}
{
 pop
 (\n\n >>> aquesta Font no treballa amb CharStrings i no la podem explorar ...pleguem!\n\n)print flush exit
}ifelse

%% sabrem si el literal del glif malgrat no estigui a l'encoding WinAnsi sí que es troba dins la font (llavors el codificarem)
ESaCharStrings?
{  %% cerquem dins el /cionari dels CharStrings de la tipografia de treball
 %% per assegurar aquesta crida ens cal haver executat la línia de comanda amb el flag -dPDFSETTINGS=/prepress
 cionari glif known
%{pop ==}forall(:::::)pstack quit
 {  %% si hi és el codificarem a l'índex zero dins de xifrat
  xifrat 0 glif put
  %% i la cadena de glif tindrà codi zero
  /glif (\000) def
%glif(olaKase?)pstack quit
 }
 {  %% si no hi és
  .notdef /glif exch def  %% tindrà el glif que haguen definit com a desconegut
 }ifelse
}
{  %% és una string o encara un literal /.notdef
 glif type /nametype eq
 {  %% ha de ser un literal .notdef
  glif cvx exec /glif exch def
 }if
}ifelse
%% és a /WinA ??
%% i si no, hi posarem el glif # /numersign de substitució
%% el nom literal o l'string de text etiquetarà el desplegable de les lleixes

%% explorem els eixos dinàmics de la MM i els llistem per triar amb quins treballarem
%%MÈTODE0 d'anàlisi dels eixos mestres d'una MM
%% extraiem els valors mínims, intermitjos (si n'hi han) i màxims, de cadascun dels eixos dinàmics de la MM
%% fem un diccionari amb tots els eixos de variabilitat i els seus valors mestres dins una array
/AsansMMeixosDinamics 0 dict def
tipusMM findfont dup /FontInfo get dup /FIMM exch def
/BlendAxisTypes get dup /aMasters exch def
length 1 sub 0 exch 1 exch
{
 /araEix exch def
 AsansMMeixosDinamics 
 FIMM /BlendAxisTypes get araEix get
 [  %% potser que l'eix de mescla sigui linial entre més de dos valors (p.e. l'eix de correcció òptica segueix aquesta lògica)
  FIMM /BlendDesignMap get araEix get
  {aload pop pop}forall
 ] put
}for
dup length dict begin
{
 1 index /FID ne
 {def}{pop pop}ifelse
}forall
%% atenció que aquesta crida només és vàlida a Ghostscript!
/Encoding
% systemdict /EncodingDirectory get /WinAnsiEncoding get
xifrat
 def  %% xifrat WinAnsi
currentdict end /Camaleonica_WA exch definefont pop
%% mooolt important: carreguem una (1) sola vegada el diccionari genèric ben xifrat de la MM
/Camaleonica_WA findfont /AsansMMionari exch def

%% test/menú
%AsansMMeixosDinamics
%{pop ==}forall
%(!!!!)pstack quit


%% escollim els 2 eixos dinàmics amb els que volem treballar
%/Weight  %% pes
aMasters 0 get
/xyeix exch def
%/Width  %% ample
aMasters 1 get
/zeix exch def


%% escollim l'orientació (fuga) de la z (true: esquerra, false: dreta)
%% però més endavant s'hauria de poder triar entre els 4 vents: NO (mestral), SO (garbí), SE (xaloc) i NE (gregal)
true
/zed exch def


%% calculem el valor de la casella quadrada on pintarem cada glif (en funció del valor màxim de /zeix i /xyeix)
%% fem la instancia, per 1 glif, amb els valors màxims de /zeix i /xyeix
%%MÈTODE1 per generar una instància MM via array del vector, a partir dels valors possibles fixats pel /BlendDesignMap
%% Paul Haahr dóna aquest mètode com més estable...
/unaInstanciaDelAsansMM  %% literal per definir la instància concreta que generem
%% /MinionMM findfont  %% aquí substituïm la crida original pel seu diccionari ja normalitzat a WinAnsi...
AsansMMionari
dup begin  %% entrem dins el diccionari de la MM per poder cridar els procediments NormalizeDesignVector i ConvertDesignVector
[  %% array del vector que treballarà makeblendedfont
 %% el seu ordre (fixat per /BlendAxisTypes) i els seus valors possibles (fixats per /BlendDesignMap)
 %% necessitem obligatòriament tantes dades vàlides com eixos dinàmics de la MM
 %%AdobeSansMM
%%Si fem l'aleatori hauríem de poder establir el valor mínim i el màxim
% realtime srand  %% perquè les 2 crides rand variïn, plantem la llavor de l'aleatori només 1 vegada
% 50 rand 1401 mod add  %% pes: entre 0 i 1400
% 50 rand 1401 mod add  %% ample: entre 0 i 1400

%pop pop [261 228] aload pop  %% un de les millors tries tipogràfiques

%%VALORS EXTREMS de pes i ample (per aquest ordre) de l' AdobeSans MM
 % [1450 1450] aload pop  %% manual tot al màxim
 aMasters
 {  %% ventem els màxims de forma automàtica?
  AsansMMeixosDinamics exch get 1 get
 }forall

 % [50 1450] aload pop  %% manual mínim pes màxim ample
 % [1450 50] aload pop  %% manual màxim pes mínim ample
 % [50 50] aload pop  %% manual mínim pes mínim ample

%%SNRD pes i ample random o no per aquí mateix de moment (a ús global en d'altres pàgines)
% true setglobal
% 2 copy 2 array astore
% globaldict exch
% /ARApesiampleRandomOno exch put
% false setglobal

 %% aquests dos procediments, i per aquest ordre, generen les dades necesàries del vector dins l'array
 NormalizeDesignVector  %% normalitza les dades de cada eix mestre en valors entre 0 i 1
 ConvertDesignVector  %% genera les dades finals pel seu ús dins la matriu de l'array per a makeblendedfont
] end
makeblendedfont
definefont  %% fixem la font en memòria
dup
%% calculem el % de l'ascendent/descendent d'aquesta instància per tal de situar bé la línia de base en relació a ?
/FontBBox get dup 1 get abs dup 3 -1 roll 3 get add exch 100 mul exch div dup /AsansMMx100descendent exch def
100 exch sub /AsansMMx100asdescendent exch def
/instantMAX exch def  %% diccionari de la instància amb els seus valors màxims


%% generem l'array tridimensional de valors de pes/ample que alimentarà el generador d'instàncies
/ii 0 def  %% comptador d'instàncies per personalitzar-ne el nom
%% calculem el salt de l'ample (max - min : /ncub)
AsansMMeixosDinamics zeix get aload pop dup /maxAMPLE exch def
1 index /minAMPLE exch def  %% 1450 50 valors màxim i mínim d'ample
exch sub ncub 1 sub div /saltZeix exch def

%% calculem el salt del pes ((max - min : /ncub x /ncub)
AsansMMeixosDinamics xyeix get aload pop dup /maxPES exch def
1 index /minPES exch def  %% 1450 50 valors màxim i mínim de pes
exch sub ncub dup mul 1 sub div /saltXYeix exch def

%% la descripció que fem és pel cub clàssic de 5x5 (però no pas la funcionalitat)
true setglobal  %% no sabem si és del tot imprescindible
[  %% conté tants arrays com /ncub

%%Ordena l'eix Z (fuga) del cub
true /Ofuga exch def
Ofuga
{
 ncub 1 sub -1 0  %% comença amb els glifs més estrets al davant (primer pla del cub)
}
{
 0 1 ncub 1 sub  %% comença amb els glifs més amples al davant (primer pla del cub)
}
ifelse

 {  %% for per a cadascun dels amples (1 per pla)
  %% els amples (índex 1) només canvien 5 cops (un per cada pla) d'estreta a ample, del fons al primer pla
  %% EP! però l'índex va de 4 a 0, o sigui que a 4 hi haurà d'anar el valor més estret i a zero el valor més ample  
  saltZeix mul maxAMPLE exch sub round cvi /araPLAample exch def  %% ha de ser un valor enter!
  [  %% obrim pla
   /araPES 0 def
   ncub
   {  %% repeat de 5 columnes per pla
    %% l'índex va de 0 a 4 perquè les columnes van d'esquerra a dreta
    [  %% obrim columna
     0 1 ncub 1 sub
     {  %% for els pesos (índex 0) canvien 25 cops per pla (5 per cada columna) de fina a negreta
      [  %% cada glif amb la seva instància, 5 glifs d'1 columna
       exch saltXYeix mul maxPES exch sub %round cvi  %% pes, no cal que sigui enter, sinó tenim problemes per quadrar els extrems
       %% l'índex va de 4 a 0 perquè els glifs van de dalt a baix, o sigui a 4 hi ha d'anar el valor més fi i a 0 el més negret
       araPLAample  %% ample
      ]  %% cada glif amb la seva instància
     }for
     %% aquí hem de desar el darrer valor de l'ample per la següent columna
     dup 0 get saltXYeix sub /maxPES exch def

%%Ordena els glifs de la columna, true: el de més pes a dalt | false: el de menys pes a dalt
true
{
  %% aquest loop capgira tots els elements trobats a la pila
  counttomark dup 1 gt
  {  %% capgirem sempre que hi hagi més d'un paquet
   /atura't exch def
   /ici 2 def
   {ici -1 roll ici 1 add /ici exch def ici atura't gt {exit} if} loop
   %% NO ens carreguem la mark
   % atura't 1 add -1 roll pop
  }
  {
   pop exch pop /atura't 1 def
  } ifelse
}if

    ]  %% tanquem columna

   }repeat

   %% aquí hem de incialitzar cap valor?
   1450 /maxPES exch def

%%Ordena les columnes, true: la de més pes a la dreta del pla | false: la de menys a la dreta del pla
false
{
  %% aquest loop capgira tots els elements trobats a la pila
  counttomark dup 1 gt
  {  %% capgirem sempre que hi hagi més d'un paquet
   /atura't exch def
   /ici 2 def
   {ici -1 roll ici 1 add /ici exch def ici atura't gt {exit} if} loop
   %% NO ens carreguem la mark
   % atura't 1 add -1 roll pop
  }
  {
   pop exch pop /atura't 1 def
  } ifelse
}if

  ]  %% tanquem pla
 }for  %% per a cadascun dels amples (1 per pla)
]

%% podem ajustar a cada pla el pes del darrer glif de la darrera columna --l'índex 0 a /minPES-- per corregir la desviació d'1
%dup
%{  %% per cada pla
% dup length 1 sub get  %% la darrera columna
% dup length 1 sub get  %% el darrer glif
% 0 minPES put
%}forall

%%TEST
%dup == quit

globaldict exch  %% no sabem si és del tot imprescindible
/Ainstancies exch put  %% totes les instàncies del cub de Noordzij
false setglobal

gsave
%% mètode stringwidth
%0 0 moveto glif tipusMM cosglif selectfont stringwidth pop
%% mètode bbox
gsave
%% llegim les coordenades del rectangle que inscriu el glif (bounding box), ignorant els nodes de control
0 0 moveto
%% tipusMM cosglif selectfont

%% activem la instància amb els seus valors màxims per fer el càlcul de la casella que les contindrà totes
instantMAX cosglif scalefont setfont

glif  %% el caràcter dins una string
true charpath flattenpath pathbbox
%% avaluem el rectangle pur
3 -1 roll abs add  %% altura Y
3 1 roll exch abs add  %% amplada X
2 copy gt
{
 pop
}
{
 exch pop
}ifelse

%% si no li posem, si el glif no tingués variabilitat (cos/pes/ample) es tocarien pels 4 costats
%false
%{
%% li sumem un #% de marges dins la casella (la meitat d'aquest valor és el marge que envoltarà el glif)
dup 10  %% #% com és alt menys marge i més petit serà el format de pàgina (s'afegeix al cos del glif)
div add
grestore
%}if
/casellag exch def  %% afecta a la mida del glif dins la casella!

%% fixem els graus de la projecció (perspectiva)
30  %% 30º per la isomètrica (imprescindible a 30 si volem emular el cub de Noordzij)
/geixos exch def


%% valor de la tangent ideal per la isomètrica: és un multiplicador del valor del costat Y del quadrat de la lleixa
geixos sin geixos cos div  %% valor de la tangent de l'angle /geixos (30ª) per l'eix X de la isomètrica
/Ti exch def
%%valor de la hipotenusa X que cal que la Y iguali
casellag ncub mul dup dup mul exch Ti mul dup mul add sqrt /hY exch def


%% igualem les mides dels dos eixos? (un cop en perspectiva l'eix X és més llarg que l'eix Y)
true
/iS exch def  %% imprescindible a true si volem emular el cub de Norrdzij


%% comptador per avaluar l'ordre d'escriptura dels glifs
Acmptdr
{
 /ioe 0 def
}if


[  %% generem la matriu tridimensional (/ncub valors de Z)
 %% posicionaríem i generaríem cadascun dels plans xy
 %% 0 1 ncub 1 sub  %%EP! el cub fuga cap al SE (xaloc) però s'han de tocar d'altres coses per tal quadri amb el format de pàgina
 ncub 1 sub -1 0  %% el cub fuga cap al NO (mestral) tal i com el va concebre Noordzij
 {  %% for que genera els valors de cadascun dels plans xy en un sentit de fuga

  dup /iApla exch def  %% útil per etiquetar les lleixes?

%%Hi pesquem l'índex de 4 a 0 de l'array de plans verticals pel grup de 5x5 glifs que pintaran el pla actual
  dup Ainstancies
  exch get

%%FEM únic el nom de la variable
%1 index dup /iApla exch def 64 string cvs dup length 1 add string dup 0 (A) putinterval dup 3 -1 roll 1 exch putinterval
%cvn exch def

%%Astack
%true setglobal
%globaldict exch
%dup length array copy
%(0000)pstack quit
/Apla exch def
%false setglobal

  [
%%Astack
%(1111)pstack quit
   exch
%3 -1 roll

   [  %% pla del cub, sigui virtual, ple, perfilat o retallador
    exch
    casellag mul casellag ncub mul  %% test 
    zed
    {
     exch dup neg exch 3 -1 roll dup
    }
    {
     exch dup 3 -1 roll dup
    }ifelse
   ]  

%%Astack
%% string com a proc
(
%   {  %% proc dels glifs

    Acmptdr
    {
     %% test de lateralitat
     /lat true def
    }if

    0 1 ncub 1 sub  %% fa les columnes d'esquerra a dreta
    % ncub 1 sub -1 0  %% fa les columnes de dreta a esquerra
    {  %% for que situa la columna d'instàncies al seu lloc

%%Hi pesquem l'índex de 0 a 4 de l'array de pesos/amples pel grup de 5 glifs que pintaran la columna actual
     dup

)
%%Astack

%%Astack
     Apla  %% pla vertical del cub

%%Astack
 %% cap de l'array del pla
 exch dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
 dup ARAva ([\n) putinterval exch

{  %% forall de la primera array

 %% cap de l'array de columna
 exch dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
 dup ARAva ([\n) putinterval exch

 {  %% forall de la segona array

  %% cap de l'array de valors
  exch dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
  dup ARAva ([\n) putinterval exch

  {  %% forall de l'array de valors
   %% passem a string el primer valor
   64 string cvs dup length dup /ARAva exch def 1 add string dup 3 -1 roll 0 exch putinterval
   dup ARAva ( ) putinterval
   %% encadenem el primer valor
   dup length 2 index length dup /ARAva0 exch def add dup /ARAva1 exch def string dup 4 -1 roll 0 exch putinterval
   dup 3 -1 roll ARAva0 exch putinterval
  }forall

  %% cua de l'array de valors
  dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
  dup ARAva (]\n) putinterval

 }forall

 %% cua de l'array de columna
 dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
 dup ARAva (]\n) putinterval

}forall

%% cua de l'array del pla
dup length dup /ARAva exch def 2 add string dup 3 -1 roll 0 exch putinterval
dup ARAva (]\n) putinterval


%%Astack
(

%iApla 64 string cvs dup length 1 add string dup 0 (A) putinterval dup 3 -1 roll 1 exch putinterval
%dup ==
%cvx exec % (kkkkk)pstack quit

     exch get

dup length array copy
%dup ==

%%Astack
     /Acolumna exch def  %% l'array amb la columna

     gsave
     casellag mul 0 translate

      0 1 ncub 1 sub  %% pinta els glifs de baix a dalt
     % ncub 1 sub -1 0  %% pinta els glifs de dalt a baix
     {  %% for que genera una instància cada vegada i pinta el(s) glif(s)
      gsave

%%Hi pesquem l'índex de 4 a 0 dins l'array de pesos/amples del glif que es pinta a la columna de dalt a baix
     dup

%%Astack
     Acolumna

     dup length array copy exch get
%%Profilaxi?
%dup length array copy
% dup ==

%%Aquí generem la instància
%%MÈTODE1 per generar una instància MM via array del vector, a partir dels valors possibles fixats pel /BlendDesignMap
%% Paul Haahr dóna aquest mètode com més estable...

%%Haurem de generar un nom únic?
/unaInstanciaDelAsansMM  %% literal per definir la instància concreta que generem
%ii 64 string cvs cvn
ii 1 add /ii exch def

%% aquí substituïm la crida original pel seu diccionari ja normalitzat a WinAnsi...
AsansMMionari
dup begin  %% entrem dins el diccionari de la MM per poder cridar els procediments NormalizeDesignVector i ConvertDesignVector
[  %% array del vector que treballarà makeblendedfont
 %% el seu ordre (fixat per /BlendAxisTypes) i els seus valors possibles (fixats per /BlendDesignMap)
 %% necessitem obligatòriament tantes dades vàlides com eixos dinàmics de la MM

 4 -1 roll

%%TEST
true setglobal
dup length array copy dup /xARTICLE exch globaldict 3 1 roll put  % ==
false setglobal

 aload pop  %% despleguem els valors de la instància

%%SNRD pes i ample random o no per aquí mateix de moment (a ús global en d'altres pàgines)
% true setglobal
% 2 copy 2 array astore
% globaldict exch
% /ARApesiampleRandomOno exch put
% false setglobal

 %% aquests dos procediments, i per aquest ordre, generen les dades necesàries del vector dins l'array
 NormalizeDesignVector  %% normalitza les dades de cada eix mestre en valors entre 0 i 1
 ConvertDesignVector  %% genera les dades finals pel seu ús dins la matriu de l'array per a makeblendedfont
] end
makeblendedfont
definefont  %% fixem la font en memòria

%%TEST
%dup length dict copy

      cosglif scalefont setfont


      %% fem una roda de color per comprovar que l'ordre és el què voldrem per les instàncies?
      false
      {
       lat
       {
        /lat false def
        0 1 1 setrgbcolor
       }
       {  %%EP! nomès vàlid si fem el cub de 5x5
        [ [ 0 0 0] [ 1 0 0] [ 0 1 0] [ 0 0 1] [ 1 1 0] ]
        1 index get aload pop setrgbcolor
       }ifelse
      }
      {  %% color dels glifs
       0 0 0 setrgbcolor
      }ifelse

      %% càlcul per centrar el glif dins la casella quadrada
      gsave
      %% llegim les coordenades del rectangle que inscriu el glif (bounding box), ignorant els nodes de control
      0 0 moveto
      glif  %% el caràcter dins una string
      true charpath flattenpath pathbbox

      %% avaluem el rectangle pur
      4 copy
      3 -1 roll abs add  %% altura Y
      3 1 roll exch abs add  %% amplada X

      %% marges X del rectangle pur vs casella
      casellag exch sub exch
      %% marges Y del rectangle pur vs casella
      hY ncub div dup /YsaltCasella exch def  %cosglif
      exch sub
      %% calculem l'orígen per tal quedi centrat dins la casella
      2 div 5 -1 roll sub  %% origen Y
      exch 2 div
      5 -1 roll
      %% quid del centrat!
      pop  %% origen X 

      grestore

      exch 5 -1 roll YsaltCasella mul add

%%TEST cap del posicionat net de cada glif en relació al punt 0,0 absolut
%ii 1 eq  %% en fem només 1
true  %% a tot
{  %% cal posar ordre a les coordenades
% gsave dup 0 2 getinterval dup == aload pop transform itransform == == grestore 
% ii ==

%% corregim l'ordre de les coordenades per tal que la casella quadri amb el glif
4 copy 3 -1 roll 4 -1 roll exch
%% com que no és format rectstroke li hem de donar format bbox
2 index add exch 3 index add exch
4 array astore

%% fem un nom únic
%%EP! hauríem de pescar els pesos i amples de cada lleixa en una array desada a banda dins la memòria global
%% els noms dels masters i l'ordre seqüencial els hauríem de traure del diccionari de la font
/araTooltip () def  %% cadena on farcirem cada tooltip que apuntarà al glif corresponent dins el cub via solapa d'articles
/faTooltip 0 def  %% sumador progressiu de llargada i posicions de la cadena /araTooltip
%(Weight: ### Width: ### glif 000) dup ii 64 string cvs dup length 3 exch sub 28 add exch putinterval /araTooltip exch def
0 1 aMasters length 1 sub
{
 dup aMasters exch get 128 string cvs dup length dup /araVA1 exch def faTooltip add /faTooltip exch def
 exch xARTICLE exch get 128 string cvs dup length faTooltip add 3 add /faTooltip exch def
 %% farcim
 faTooltip string dup 0 5 -1 roll putinterval 
 dup araVA1 (: ) putinterval
 dup araVA1 2 add 4 -1 roll putinterval
 dup dup length 1 sub ( ) putinterval
 araTooltip length dup /araVA0 exch def faTooltip add string dup 0 araTooltip putinterval
 dup araVA0 4 -1 roll putinterval
 /araTooltip exch def
 /faTooltip 0 def
}for
(glif 0000 ) /TXTnGlif exch def
%%TEST
araTooltip length dup /araVA exch def TXTnGlif length add string dup 0 araTooltip putinterval
dup araVA TXTnGlif putinterval dup dup length ii 64 string cvs dup length 3 -1 roll exch sub
1 sub
exch putinterval
%%GlifVisible aquí podrém posar un caràcter que signifiqués que aquest glif és visible amb el cub muntat
dup dup length 1 sub
aVisibles ii 1 sub get
{  %% marquem amb un asterisc (42) el glif visible dins el cub muntat
 42 put 
% (::::)pstack quit
}
{
 pop pop
%% (!!!!)pstack quit
}ifelse
%% hi fegim el núm. de lleixa que toca per tal es faci evident on trobar visualment el glif encara que es tigui tapat
(Lleixa:    / ) dup 8 iL 2 string cvs putinterval dup length dup /araVa exch def 2 index length add
string dup 3 -1 roll 0 exch putinterval dup 3 -1 roll araVa exch putinterval
/araTooltip exch def

%%Constatem amb alegria que els articles obeeixen al mateix sistema de coordenades amb el que componem els glifs
%% cosa que no fan d'altres objectes del pla interactiu de pdf, com les anotacions o els formularis (les descartem aquí)
%% tenen en comú però que tampoc NO obeeixen els Optional Contents, o sigui que ignoren les capes on han estat creats
%% compten amb solapa pròpia de navegació que ens permetrà consultar pesos i amples clicant sobre el glif (però no a l'inrevés)
%% potser hauríem d'obrir el PDF amb aquesta la solapa activa més que amb la de les capes?
%% el viewer de PDF a Firefox: TÉ la solapa de capes i funciona, també podem veure la solapa d'articles però els links no van
%% el viewer de PDF a Brave/Chrome: NO té la solapa de capes, té la solapa d'articles però els links no van
[
/Rect 3 -1 roll
%dup ==
/Title araTooltip
/Page 1
/ARTICLE
pdfmark

[
/Action /Article
/Dest araTooltip
/Title araTooltip
/OUT pdfmark


false{
%%Awidget
%% aquí hi poden anar les Annots?
[
/_objdef
({tooltipUNIC000}) dup ii 64 string cvs dup length 3 exch sub 12 add exch putinterval
dup /araTooltip exch def cvx exec
/type /dict
/OBJ pdfmark
%% si volem visibilitzar gràficament el rectangle
%gsave 1 0 0 setrgbcolor 0 setlinewidth 4 copy 3 -1 roll 4 -1 roll exch rectstroke grestore
%% caldrà veure si les anotacions també queden amagades sota la perspectiva de les capes
%% corregim l'ordre de les coordenades per tal que la casella quadri amb el glif
4 copy 3 -1 roll 4 -1 roll exch
%% com que no és format rectstroke li hem de donar format bbox
2 index add exch 3 index add exch
4 array astore

mark
{tooltips}
araTooltip cvx exec
mark
araTooltip cvx exec

false
{
 <<
   /Rect 8 -1 roll  % rectangle invisible i sensible del botó
%(Y)pstack quit
   /P {ThisPage}  % ref ind a l'entrada que hi ha d'haver al diccionari de la pàgina
   /FT /Btn  % tipus botó
   /T (BotoPostIt)  % nom intern pot ser ídem per tots?
   /Ff 65536  % flag obligatori per al tipus botó
   /Subtype /Widget  % obligatori
   /Type /Annot  % obligatori
   /TU (tampoc al GSoC!)  % text del Tooltip (Sticky Note o Post-It)
 >>
}
{
 <<
   /Rect 8 -1 roll 
   /P {ThisPage}
   /FT /Btn
   /T %(elMeuTooltip)
araTooltip
   /Ff 65536
   /Subtype /Widget
   /Type /Annot
   /TU (Weight: 50 | Width: 1450)
   /F 4
   /AA <<>>
   /MK <</IF <<>> >>
   /H /N
   /DA (/HeBo 18 Tf 0 g)
 >>
}ifelse

/PUT
pdfmark

/APPEND
pdfmark

%%TEST cua
}if
}if

      moveto pop pop

      Acmptdr
      {  %% escriu el nombre del comptador
       CUBescriu
       {  %% extraiem el glif que toca compondre 
        txt3Dcub ioe 1 getinterval
        ioe 1 add /ioe exch def
       }
       {
        ioe 64 string cvs ioe 1 add /ioe exch def
       }ifelse
      }
      {  %% escriu el glif
       glif
      }ifelse

      show  % glyphshow
      grestore
     }for  %% genera una instància cada vegada i pinta el(s) glif(s)

     grestore
    }for  %% situa la columna d'instàncies al seu lloc

%%Astack
)
%% string com a proc
%   }

%%Astack
%% empalmem 2 strings
dup length exch 3 -1 roll dup length dup /ARAva exch def 4 -1 roll
add string dup 3 -1 roll 0 exch putinterval dup ARAva 4 -1 roll putinterval

  ]
 }for  %% genera els valors de cadascun dels plans xy en un sentit de fuga
]  %% matriu tridimensional (/ncub valors de Z)

%dup ==

%% el format de pàgina exacte seria, tenint en compte la perspectiva:
%% per la Y, els valors transformats de la primera lleixa, sumant el valor Y del punt UR i el valor Y del punt LL
%% mètode via transform/itransform
gsave
dup 0 get 0 get
[  %% posem en perspectiva l'eix X amb el valor de la tangent /Ti de /geixos graus
 1

 Ti
 % geixos sin geixos cos div  %% valor de la tangent de l'angle /geixos (30ª) per l'eix X de la isomètrica
 %  0  %% test

 0 1 0 0
] concat
aload pop pop hY
transform  %% dóna les coordenades del punt x,y (eix normal) en unitats del dispositiu de sortida (device pixels)
2 array astore 3 1 roll
transform
grestore
itransform  %% dóna les coordenades del punt x,y (eix normal) en punts tipogràfics
exch pop  %% conservem el valor de Y
exch aload pop itransform
exch pop add  %% valor net de Y que dóna l'altura exacta del cub en perspectiva
/cNy exch def  %% distància Y (valor Y del cub de Noordzij)
%% per la X (la perspectiva no l'afecta) la distància X entre la posició LL de la primera lleixa i la posició LR de la darrera
dup 0 get 0 get 0 get abs  %% LL
1 index ncub 1 sub get 0 get 2 get  %% LR
add /cNx exch def  %% distància X (valor X del cub de Noordzij)

%% definim els 4 marges (ara mínims) de posicionament del cub a dins la pàgina
50
/mep exch def

%% definim la pàgina
<</PageSize[ cNx mep 2 mul add cNy mep 2 mul add ]>>setpagedevice

%%OC cap
FEMlleixes
{
%%+ LA CREACIÓ DELS OBJECTES ESTRUCTURALS DELS OPTIONAL CONTENTS QUE S'HAN DE GENERAR NOMÉS 1 COP S'HAURIEN DE DEFINIR AQUÍ
%%+ aquí creem els objectes OC del Catalog que cal fer créixer
 mark /_objdef {objCatalog} /type/dict /OBJ pdfmark  %% l'objecte diccionari a afegir a {Catalog}
 mark /_objdef {objOCProperties} /type/dict /OBJ pdfmark  %% l'objecte diccionari a afegir a {objCatalog}
 mark /_objdef {objD} /type/dict /OBJ pdfmark  %% l'objecte diccionari a afegir a {objOCProperties}
 mark /_objdef {objOCGs} /type/array /OBJ pdfmark  %% l'objecte array a afegir a {objOCProperties}
 mark {objD} << /BaseState /ON >> /PUT pdfmark  %% afegim una clau/valor fix a {objD}
 mark {objD} << /ListMode /VisiblePages >> /PUT pdfmark  %% afegim una clau/valor fix a {objD}
 mark /_objdef {objOrder} /type/array /OBJ pdfmark  %% l'objecte array de la clau /Order a afegir a {objD}
%%Només l'inicialitzem un cop?
 /iL 0 def  %% comptador de layers

%%+ comprovarem si al generador de capes l'ordre dels factor no altera el producte
 /lleiXes 1 dict def  %% inicialitzem on desarem objectes i noms de capes pel pdfmark i per pàgina

%%Awidget
false{
 %% estructura d'objectes de l'arbre Acroform que penja del Catalog per generar els tooltips amb els valors de cada glif
 [ /_objdef {aform} /type /dict /OBJ pdfmark
 [ /_objdef {afields} /type /array /OBJ pdfmark
 [ {aform} << /Fields {afields}
/DR <<
%      /Font <</ZaDb 11 0 R /Helv 10 0 R /HeBo 38 0 R >>
%      /Encoding <</PDFDocEncoding 12 0 R >>
    >>
/DA (/Helv 0 Tf 0 g )
          >> /PUT pdfmark
 [ {Catalog} << /AcroForm {aform} >> /PUT pdfmark
 [ {afields} {tooltips} /APPEND pdfmark

%% entrada /Annots com una array del diccionari /Page on hi ficarem tots els tooltips
 [ /_objdef {tooltips} /type /array /OBJ pdfmark
 [ {ThisPage} << /Annots {tooltips} >> /PUT pdfmark
}if

}if


%% segons els marges /mep posicionem el cub dins la pàgina
zed
{
 ncub 1 sub
 casellag mul mep add
 mep

%%TEST
%2 copy 2 array astore ==

 translate
}if

%% array on desarem els valors Z de les lleixes
/Zlleixes ncub array def

%% executem la matriu tridimensional
{  %% forall per tots els plans verticals

 %% aquì podríem definir una lleixa per cada pla vertical del cub
%%OC per cada pla vertical
 FEMlleixes
 {
%%+ generador de capes
%% crides pdfmark de configuració de capes
%% les declarem i les hi donem nom literari
  /araOLl ({objecteNodeLleixa) def
  /araNLl (nomNodeLleixa) def
  (}) araOLl dup length dup /araVa exch def string copy iL 6 string cvs dup length dup
  /aCua exch def 1 add araVa add string dup 4 -1 roll 0 exch putinterval dup 3 -1 roll araVa
  exch putinterval dup 3 -1 roll araVa aCua add exch putinterval dup length string copy /araOLl exch def

%(CAL?)pstack quit
%        dup 1 get ARAupath exch 2 sub get  %% la X del node
%        exch 0 get dup 3 1 roll  %% pel nom de la layer

%%+ aquí és on creem la capa
  mark /OC araOLl cvx exec /BDC pdfmark
%        gsave 0 1 0 setrgbcolor faX grestore
 }if  %%OC fem lleixes

 dup 0 get

 %% extraiem el punt 0,0 per moure la lleixa de les lletres al pla corresponent
 dup 0 2 getinterval 3 1 roll

 gsave

 iS  %% refusem fer servir cap escalat
 {  %% igualem les mides dels 2 eixos?
%  1 1.2 scale  %% càcul a ull, però s'ha de fer ben fet
 }if

 [  %% posem en perspectiva l'eix X a /geixos (30 graus?)
  1

  Ti
% geixos sin geixos cos div  %% valor de la tangent de l'angle /geixos (30ª) per l'eix X de la isomètrica
%  0  %% test

  0 1 0 0
 ] concat

%%TEST que ens marca el filet del pla vertical
 gsave
false{
 gsave
 dup 1 setlinewidth 1 0 0 setrgbcolor
 %% perfilem les lleixes?
 %% rectifiquem la Y per igualar els dos costats per la distorsió de la perspectiva
 aload pop pop hY rectstroke
 grestore
}if

 %% tapem o no les lleixes verticals?
 %pop
 %% rectifiquem la Y per igualar els dos costats per la distorsió de la perspectiva
 aload pop pop hY
 1 1 1 setrgbcolor rectfill
 grestore

 1 get

 %% movem la lleixa de les lletres al seu pla
 exch aload pop translate

%(!)pstack quit
%dup length 20 sub 20 getinterval (AESCRIURE)pstack quit

 cvx exec  %% executem l'string com a proc dels glifs

 grestore

%exit  %% test per si només volem veure la primera lleixa

%%OC per cada pla vertical
 FEMlleixes
 {
%%+ aquí és on tanquem la capa
  mark /EMC pdfmark

%%+ generador de capes
%% crides pdfmark de configuració de capes
%% les declarem i les hi donem nom literari
%%+ aquí podem diferir el farcit a string i desar-ho dins una array de 2 elements (ens interessa per facilitar la categorització)
%BlueO 64 string cvs dup length /araVa exch def exch 64 string cvs dup length araVa add 3 add string dup
%4 -1 roll 0 exch putinterval dup araVa ( / ) putinterval dup 3 -1 roll araVa 3 add exch putinterval
%dup length string copy

%%EP! hauríem de pescar els amples de cada lleixa en una array desada a banda dins la memòria global
%Apla iApla get 0 get 1 get  %% aquest no canvia mai
Ofuga
{
 maxAMPLE iApla saltZeix mul sub cvi  %% comença amb els glifs més estrets al davant (primer pla del cub)
}
{
 minAMPLE iApla saltZeix mul add cvi  %% comença amb els glifs més amples al davant (primer pla del cub)
}ifelse
%(LLLL)pstack quit
%(###)  %% valor genèric provisional
zeix 128 string cvs dup length dup /ARAva exch def
2 index 128 string cvs length add 1 add string dup 3 -1 roll 0 exch putinterval
dup ARAva ( ) putinterval dup 3 -1 roll 128 string cvs ARAva 1 add exch putinterval
iApla 1 add /iApla exch def  %% si canviessim la fuga (ara al NO) això s'invalida!

  [
   exch
   iL  % BlueO
   exch
  ]
  /nomLleixa exch def
%%+ generador de capes
%% desem 
  lleiXes araOLl
  [
   nomLleixa
   %% definim el nom intern de la lleixa
   araNLl dup length dup /araVa exch def string copy iL 6 string cvs dup length araVa add string dup
   4 -1 roll 0 exch putinterval dup 3 -1 roll araVa exch putinterval cvn
   %% flag del node que NO balla
   true  % BVoOB
   {  %% si és BlueValues
    0
   }
   {  %% si és OtherBlues
    2
   }ifelse
  ] put

  iL 1 add /iL exch def

 }if  %%OC tanquem la capa

%% ordenem el valor constant de Z
Zlleixes Acolumna 0 get 1 get iL 1 sub exch put

}forall  %% per tots els plans verticals


%%OC cua
FEMlleixes
{
%%+ arbre estructural de les capes
%%+ creem els objectes per l'OptionalContent
 lleiXes
 {
  pop mark /_objdef 3 -1 roll 128 string cvs cvx exec /type/dict /OBJ pdfmark
 }forall

 lleiXes
 {  %% forall
  exch mark exch 128 string cvs cvx exec
  <<
    /Type /OCG
%%+ aquí definim el nom literari (solapa) de la lleixa muntant l'string amb el (Y del Blue / Y del node)
    /Name 7 -1 roll dup 0 get
    dup length 2 eq
    {  %% és un node
     exch pop aload pop exch 64 string cvs dup length /araVa exch def exch 64 string cvs dup
     length araVa add 3 add string dup 4 -1 roll 0 exch putinterval dup araVa ( / ) putinterval
     dup 3 -1 roll araVa 3 add exch putinterval dup length string copy
    }
    {  %% és una zona BlueValues o OtherBlues
     0 get 64 string cvs dup length /araVa exch def exch 2 get 4 eq
     {
      ( > BlueValue) dup length araVa add string dup 3 -1 roll araVa exch putinterval dup 3 -1 roll 0 exch putinterval
     }
     {
      ( > OtherBlue) dup length araVa add string dup 3 -1 roll araVa exch putinterval dup 3 -1 roll 0 exch putinterval
     }ifelse
    }ifelse
  >> /PUT pdfmark
 }forall

 %% configurem el seu comportament (ordre, visibilitat, impressió, etc)

%%+ alimentem l'array objGlif sempre amb nom diferent
 /araOG ({objGlif) def
 (}) araOG dup length dup /araVa exch def string copy
 %iOG
 iL
 6 string cvs dup length dup
 /aCua exch def 1 add araVa add string dup 4 -1 roll 0 exch putinterval dup 3 -1 roll araVa
 exch putinterval dup 3 -1 roll araVa aCua add exch putinterval dup length string copy /araOG exch def

 mark /_objdef araOG cvx exec /type/array /OBJ pdfmark  %% l'objecte array es crea per cada glif a afegir a {objOrder}

 mark araOG cvx exec
 (Cub de Noordzij)
 128 string cvs dup length dup /araVa exch def 4 add dup /araVa2 exch def
 
 Acmptdr
 {
  CUBescriu
  {  %% etiquetem el desplegable de les lleixes amb el text a escriure
   % txtcub
  }
  {  %% etiquetem el desplegable de les lleixes amb el genèric d'assaig
   /txtcub (ASSAIG) def
  }ifelse
 }
 {  %% etiquetem el desplegable de les lleixes amb el nom literal del glif
  xifrat glif 0 get get 128 string cvs /txtcub exch def
 }ifelse 
 txtcub length add
 dup /araVa3 exch def 3 add string dup 3 -1 roll 0 exch putinterval dup araVa ( // ) putinterval dup araVa2
 txtcub putinterval
 dup araVa3 ( //) putinterval
 /APPEND pdfmark  %% afegim el nom del glif i del fitxer de la font a l'objecte array

 mark araOG cvx exec

%lleiXes {== ==}forall (----)== quit
 [
  (Y BlueValues:)
  %% primer anem a pescar les zones
  lleiXes
  {
   2 get 4 eq
   {
    128 string cvs cvx exec
   }
   {
    pop
   }ifelse
  }forall
  [
   (Y Nodes:)
   %% anem a pescar els nodes dels BlueValues
   lleiXes
   {
    dup 2 get 0 eq
    {
     pop 128 string cvs cvx exec
    }
    {
     2 get 1 eq
     {
      128 string cvs cvx exec
     }
     {
      pop
     }ifelse
    }ifelse
   }forall

  ]


%%TEST
%Zlleixes
%(zzzz)pstack quit
cleartomark
mark
lleiXes
{
 pop 128 string cvs
}forall
%% endreça una seqüència numèrica o de text, existent a l'stack, de menys a més (operador ge) o de més a menys (operador le)
%% a comptar des de la base de l'stack  
{  %% loop mentre estiguin desordenats
 counttomark 1 sub /iCul exch def
 %% escombrat d'ordenació
 iCul     
 {  %% repeat 
  iCul index /araCul exch def
  iCul 1 sub index araCul ge  %% ordre d'endreça
  {     
   iCul 1 sub /iCul exch def
  }          
  {
   iCul -1 roll
   iCul 1 add 1 roll
  }ifelse
 }repeat
 %% mirem si estan per ordre de menys a més (ge)
 %% o de més a menys (le), començant pel cul de l'stack
 /Ordenats true def 
 counttomark 1 sub /iCul exch def
 iCul
 {  %% repeat
  iCul index /araCul exch def
  iCul 1 sub index araCul ge  %% ordre d'endreça
  {
   iCul 1 sub /iCul exch def
  }
  {
   /Ordenats false def
   exit
  }ifelse
 }repeat
 Ordenats{exit}if
}loop

counttomark array astore

(lleixes verticals)
exch
{
% lleiXes exch get
 cvx exec
}forall

%exch pop aload pop exch

 ] /APPEND pdfmark  %% afegim els BlueValues amb els seus Y nodes a l'objecte array

%%+ alimentem l'array objOrder
 mark {objOrder} araOG cvx exec /APPEND pdfmark  %% afegim l'array {objGlif} a l'array {objOrder} 

%%+ alimentem l'array objOCGs de forma que anem afegint els objectes a la cua 
 lleiXes
 {  %% els objectes de capa no tenen cap necessitat d'anar ordenats segons el glif/pagina corresponent
  pop 128 string cvs cvx exec mark exch {objOCGs} exch /APPEND pdfmark
 }forall

 %% integració a la base de l'estructura de pàgina
 mark {ThisPage}
 <<
   /Properties
   <<
     %% clau (nom intern de la lleixa) valor (objecte de la lleixa)
     lleiXes
     {
      1 get exch 128 string cvs cvx exec
     }forall
   >>
 >> /PUT pdfmark

%%+ cal veure si aquí és on ens cal desar 1 COP els cobjectes de l'estructura de lleixes que aguanten l'arbre OCProperties
%%+ només 1 COP al final
%%+ alimentem el diccionari objD
 mark {objD} << /Order {objOrder} >> /PUT pdfmark  %% afegim {objOrder} a {objD}

%%+ només 1 COP al final
%%+ alimentem el diccionari objOCProperties
 mark {objOCProperties} << /OCGs {objOCGs} /D {objD} >> /PUT pdfmark

%%+ només 1 COP al final
%%+ finalment alimentem el diccionari Catalog
 mark {Catalog} << /OCProperties {objOCProperties} >> /PUT pdfmark

}if

mark
%% camps públics del Docinfo
/Subject
(generem dinàmicament l'icònic cub de Gerrit Noordzij)
/Title
(l'icònic cub de Gerrit Noordzij)
/Author (copyleft 2023: Marcantoni Malagarriga-Picas <marcantoni@femfum.com>)

%% reproduïm la URL original que ha generat el pdf (també si treballem via Terminal)
/Keywords (https://pliegos.net/maker/GerritNoordzij/cubNoordzij.php?xyz=)
nDocInfo 128 string cvs dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
(&cos=) dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
cDocInfo 128 string cvs dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
(&glif=) dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
gDocInfo type /nametype eq
{
 (/) dup length 2 index length dup /araVA exch def add string dup
 4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
}if
gDocInfo 128 string cvs dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval
%% cua de paraules clau
(, PostScript, Ghostscript, MultipleMaster, PDF, Optional Content, generative code, typography, Gerrit Noordzij, https://ja.cat/NoordzijCub) dup length 2 index length dup /araVA exch def add string dup
4 -1 roll 0 exch putinterval dup 3 -1 roll araVA exch putinterval

/Creator (https://github.com/marcantonifemfum/CubNoordzij/blob/main/Noordzij_cub.ps)
/DOCINFO pdfmark
%% podríem generar un camp privat per desar-hi tots els paràmetres clau de les variables aleatòries que han fet el PDF

showpage

